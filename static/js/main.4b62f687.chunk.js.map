{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","clickedShow","e","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contact_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b62f687.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        //payload is a data you want to send  with your action\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        //payload is a data you want to send  with your action\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  // pull out the state from contacts\r\n  state = {\r\n    contacts: [],\r\n    /* \r\n      pulled out from contacts Array\r\n            {\r\n        id: \"1\",\r\n        name: \"John Doe\",\r\n        email: \"jdoe@test.com\",\r\n        phone: \"555 555 555\"\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"Karen Kampbell\",\r\n        email: \"kkampbel@test.com\",\r\n        phone: \"666 555 555\"\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"Max Rabbe\",\r\n        email: \"maxr@test.com\",\r\n        phone: \"777 555 777\"\r\n      }\r\n      */\r\n    //provider for fetched data is ComponentDidMount\r\n\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  /* async version not commented\r\n    componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => this.setState({ contacts: res.data }));\r\n  }\r\n\r\n  \r\n  */\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // now you need to decide what you would like to pass, in this case entire state\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer; // to skip sytax Context.Consumer\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Contact extends Component {\r\n  // or we can have it inside the class\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired\r\n  };\r\n  /* \r\n    constructor() {\r\n    super();\r\n    this.state = {};\r\n\r\n    this.clickedShow = this.clickedShow.bind(this);\r\n  }\r\n  */\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  /* \r\n    onDeleteClick = (id, dispatch) => {\r\n    //this.props.deleteClickHandler();\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n  */\r\n  onDeleteClick = async (id, dispatch) => {\r\n    //this.props.deleteClickHandler();\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  // we can bind onClick with this. to show state-> state = {};\r\n  //  onClick={this.clickedShow.bind(this)}\r\n  // by constructor, or the best way is to use arrow =>\r\n  //With arrow functions the this keyword always represents the object that defined the arrow function.\r\n  clickedShow = e => {\r\n    // if we pass e event object we canacces different things too\r\n    //console.log(this.state);\r\n    //State is immutabe, you can not directly manipulate it\r\n    //what we going to achieve is toggling the state that is wny ->\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  //access props in class component-> this.props\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    // not to write this.props.xxxx constantly\r\n    const { showContactInfo } = this.state;\r\n    /* \r\n    we could have it also like that: \r\n    const { contact } = this.props;\r\n\r\n          <h4 className=\"card-title\">{contact.name}</h4>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {contact.email}</li>\r\n            <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n    */\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\" card border-info mb-3\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  {name}{\" \"}\r\n                  <i\r\n                    onClick={this.clickedShow}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className=\"fas fa-sort-down\"\r\n                  />{\" \"}\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"#d5391a\"\r\n                    }}\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  />\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                      className=\"fas fa-pencil-alt\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        float: \"right\",\r\n                        color: \"#36e39f\",\r\n                        marginRight: \"1rem\"\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                </h4>\r\n                {showContactInfo ? (\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n  //deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n/*\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired\r\n};\r\n */\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport default class Contacts extends Component {\r\n  /* \r\n  if there is aneed for initialisation of sth use constructor, otherwise\r\n  constructor() {\r\n    super();\r\n    this.state = {}\r\n  \r\n    contacts has bee pulled out to  context component and state has gone\r\n    Context exported Provider to App.js we need to import context to module from which we had pueeld state out\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: \"1\",\r\n        name: \"John Doe\",\r\n        email: \"jdoe@test.com\",\r\n        phone: \"555 555 555\"\r\n      },\r\n      {\r\n        id: \"2\",\r\n        name: \"Karen Kampbell\",\r\n        email: \"kkampbel@test.com\",\r\n        phone: \"666 555 555\"\r\n      },\r\n      {\r\n        id: \"3\",\r\n        name: \"Max Rabbe\",\r\n        email: \"maxr@test.com\",\r\n        phone: \"777 555 777\"\r\n      }\r\n    ]\r\n  };\r\n  */\r\n  /*would be handled by context\r\n  \r\n  \r\n  deleteContaact = id => {\r\n    const { contacts } = this.state;\r\n\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n    this.setState({\r\n      contacts: newContacts\r\n    });\r\n  };\r\n  */\r\n  // we need to add state = { contacts: []} otherwise app does not know loop through?\r\n  state = {\r\n    contacts: []\r\n  };\r\n\r\n  render() {\r\n    // now we are not returning it from here\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-info\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  /*\r\n                  deleteClickHandler={this.deleteContaact.bind(\r\n                    this,\r\n                    contact.id\r\n                  )}\r\n                  */\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    /* \r\n    we are pulling contacts from state, looping through using map() and outputing name in h1\r\n    */\r\n    /*\r\n    const { contacts } = this.state;\r\n    return (\r\n       ...................................\r\n      we can simpy pass entire contact\r\n            name={contact.name}\r\n            email={contact.email}\r\n            phone={contact.phone}\r\n            ............................\r\n      \r\n      <React.Fragment>\r\n        {contacts.map(contact => (\r\n          <Contact\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteClickHandler={this.deleteContaact.bind(this, contact.id)}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n    */\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"; // impt TAB\r\nimport { Link } from \"react-router-dom\";\r\n// you can create CSS and bring it here, it would affect only this component\r\n// import './nameOfCss.css';\r\n// if there is no state we can use function component rfc TAB\r\n\r\nconst Header = props => {\r\n  // to access props put them inside function parameter\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"nav-bar nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-xs fa-home\"> Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-xs fa-plus\"> Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/About\" className=\"nav-link\">\r\n                <i className=\"fas fa-xs fa-question\"> About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n// to indicate default prop, to display always some kind of Header ex\r\nHeader.defaultProps = {\r\n  branding: \"My App\" // this case, Contact manager overwriting that\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n/* \r\nconst headingStyle = {\r\n  // we can keep style in TAG or set it to variable\r\n  //<h1 style={{ color: \"#bada55\", sontSize: \"2rem\" }}>{branding}</h1>\r\n  color: \"#bada55\",\r\n  sontSize: \"2rem\"\r\n};\r\n*/\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage Contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n\r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card bg-light mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-outline-info btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    /* \r\n    return (\r\n      <div className=\"card bg-light mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Enter Phone\"\r\n                value={phone}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Contact\"\r\n              className=\"btn btn-outline-info btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n    */\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params; // to pull out id\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //Rediract\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card bg-light mb-3\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-outline-info btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-warning\">404 Page not found</span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//import Contact from \"./components/Contact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootswatch/dist/spacelab/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Managet\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}